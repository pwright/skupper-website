---
title: Using Skupper podman
---
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.20">
<title>Using Skupper podman</title>
<style>

</style>
</head>
<body id="using-skupper-podman" class="article">
<div id="header">
<h1>Using Skupper podman</h1>
</div>
<div id="content">
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Skupper podman allows you to create a site using containers, without requiring Kubernetes.
Typically, you create a site on a Linux host, allowing you to link to and from other sites, regardless of whether those sites are running in podman or Kubernetes.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
This is a preview feature and may change before becoming fully supported by <a href="https://skupper.io">skupper.io</a>.
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="about">About Skupper podman</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Skupper podman is available with the following precedence:</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1"><code>skupper --platform podman &lt;command&gt;</code></dt>
<dd>
<p>Use this option to avoid changing mode, for example, if you are working on Kubernetes and podman simultaneously.</p>
</dd>
<dt class="hdlist1"><code>export SKUPPER_PLATFORM=podman</code></dt>
<dd>
<p>Use this command to use Skupper podman for the current session, for example, if you have two terminals set to different contexts. To set the environment to target Kubernetes sites:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ export SKUPPER_PLATFORM=kubernetes</code></pre>
</div>
</div>
</dd>
<dt class="hdlist1"><code>skupper switch podman</code></dt>
<dd>
<p>If you enter this command, all subsequent command target podman rather than Kubernetes for all terminal sessions.</p>
</dd>
</dl>
</div>
<div class="paragraph">
<p>To determine which mode is currently active:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper switch

podman</code></pre>
</div>
</div>
<div class="paragraph">
<p>To switch back to target Kubernetes sites: <code>skupper switch kubernetes</code></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="creating-a-site">Creating a site using Skupper podman</h2>
<div class="sectionbody">
<div class="ulist">
<div class="title">Prerequisites</div>
<ul>
<li>
<p>The latest <code>skupper</code> CLI is installed.</p>
</li>
<li>
<p>Podman is installed, see <a href="https://podman.io/" class="bare">https://podman.io/</a></p>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>By default, Podman v4 uses Netavark which works with Skupper.
If you are using CNI, for example, if you upgrade from Podman v3, you must also install the <code>podman-plugins</code> package.
For example, <code>dnf install podman-plugins</code> for RPM based distributions.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
CNI will be deprecated in the future in preference of Netavark.
</td>
</tr>
</table>
</div>
</div>
</div>
</li>
<li>
<p>Podman service endpoint.</p>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>Use <code>systemctl status podman.socket</code> to make sure the Podman API Socket is running.</p>
</div>
<div class="paragraph">
<p>Use <code>systemctl --user enable --now podman.socket</code> to start the  Podman API Socket.</p>
</div>
<div class="paragraph">
<p>See <a href="https://github.com/containers/podman/blob/main/docs/tutorials/socket_activation.md">Podman socket activation</a> for information about enabling this endpoint.</p>
</div>
</div>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Set your session to use Skupper podman:</p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ export SKUPPER_PLATFORM=podman</code></pre>
</div>
</div>
<div class="paragraph">
<p>To verify the <code>skupper</code> mode:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper switch

podman</code></pre>
</div>
</div>
</div>
</div>
</li>
<li>
<p>Create a Skupper site:</p>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>The simplest Skupper site allows you to link to other sites, but does not support linking <em>to</em> the current site.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper init --ingress none

It is recommended to enable lingering for &lt;username&gt;, otherwise Skupper may not start on boot.
Skupper is now installed for user '&lt;username&gt;'.  Use 'skupper status' to get more information.</code></pre>
</div>
</div>
<div class="paragraph">
<p>If you require that other sites can link to the site you are creating:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper init --ingress-host &lt;machine-address&gt;

It is recommended to enable lingering for &lt;username&gt;, otherwise Skupper may not start on boot.
Skupper is now installed for user '&lt;username&gt;'.  Use 'skupper status' to get more information.</code></pre>
</div>
</div>
<div class="paragraph">
<p>For more information, see <a href="cli-podman:skupper_init.in">podman skupper init</a>.</p>
</div>
</div>
</div>
</li>
<li>
<p>Check the status of your site:</p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper status
Skupper is enabled for "&lt;username&gt;" with site name "&lt;machine-name&gt;-&lt;username&gt;" in interior mode. It is not connected to any other sites. It has no exposed services.</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
You can only create one site per user. If you require a host to support many sites, create a user for each site.
</td>
</tr>
</table>
</div>
</div>
</div>
</li>
</ol>
</div>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_linking_sites_using_skupper_podman">Linking sites using Skupper podman</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The general flow for linking podman sites is the same as for Kubernetes sites:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Generate a token on one site:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper token create &lt;filename&gt;</code></pre>
</div>
</div>
</li>
<li>
<p>Create a link from the other site:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper link create &lt;filename&gt;</code></pre>
</div>
</div>
</li>
</ol>
</div>
<div class="paragraph">
<p>After you have linked to a network, you can check the link status:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper link status</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_working_with_services_using_skupper_podman">Working with services using Skupper podman</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The general flow for working with services is the same for Kubernetes and Podman sites.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
Services exposed on Kubernetes are not automatically available to Podman sites.
This is the equivalent to Kubernetes sites created using <code>skupper init --enable-service-sync false</code>.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<div class="title">Example 01: Consuming a service from a Podman site</div>
<p>In this variation of the <a href="https://github.com/skupperproject/skupper-example-hello-world">hello world</a> example, the <code>backend</code> service is exposed on Kubernetes site and a Podman site is linked.
You deploy the <code>frontend</code> as a container and that container can access the <code>backend</code> service.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Create a Podman site and link it to a Kubernetes site.</p>
</li>
<li>
<p>Check the service from the Podman site:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper service status

No services defined</code></pre>
</div>
</div>
<div class="paragraph">
<p>This result is expected because services exposed on Kubernetes are not automatically available to Podman sites.</p>
</div>
</li>
<li>
<p>Create a service on the Podman site matching the service exposed on the Kubernetes site:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper service create backend 8080</code></pre>
</div>
</div>
</li>
<li>
<p>Validate the service from the Podman site by checking the backend API health URL:</p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ podman run -it --rm --network=skupper --name=myubi ubi8/ubi curl backend:8080/api/health

OK</code></pre>
</div>
</div>
<div class="paragraph">
<p>This command runs a container using the <code>skupper</code> network and returns the results from <code><a href="http://backend:8080/api/health" class="bare">http://backend:8080/api/health</a></code></p>
</div>
</div>
</div>
</li>
<li>
<p>Run the frontend as a container:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ podman run -dp 8080:8080 --name hello-world-frontend --network skupper quay.io/skupper/hello-world-frontend</code></pre>
</div>
</div>
</li>
<li>
<p>Check your service network is working as expected by navigating to <a href="http://localhost:8080" class="bare">http://localhost:8080</a> and click <strong>Say hello</strong>.</p>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>Each of the backend replicas respond, for example <code>Hi, Perfect Parrot. I am Kind Hearted Component (backend-7c84887f9f-wxhxp).</code></p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
<div class="paragraph">
<p>In this scenario, running the <code>skupper service status</code> command on the Podman site does not provide much detail about the service:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper service status
Services exposed through Skupper:
╰─ backend (tcp port 8080)</code></pre>
</div>
</div>
</td>
</tr>
</table>
</div>
</div>
</div>
</li>
</ol>
</div>
<div class="paragraph">
<div class="title">Example 02: Exposing a service from a Podman site</div>
<p>In this variation of the <a href="https://github.com/skupperproject/skupper-example-hello-world">hello world</a> example, the <code>backend</code> service is exposed on Podman site and consumed from a <code>frontend</code> on a Kubernetes site.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Create a Podman site and link it to a Kubernetes site.</p>
</li>
<li>
<p>Create and expose a frontend deployment on the Kubernetes site:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ kubectl create deployment frontend --image quay.io/skupper/hello-world-frontend
$ kubectl expose deployment/frontend --port 8080 --type LoadBalancer</code></pre>
</div>
</div>
</li>
<li>
<p>Run the backend as a container:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ podman run -d --name hello-world-backend --network skupper quay.io/skupper/hello-world-backend</code></pre>
</div>
</div>
</li>
<li>
<p>Expose the <code>backend</code> from the Podman site.</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper expose host hello-world-backend --address backend --port 8080</code></pre>
</div>
</div>
</li>
<li>
<p>From the Kubernetes site, create the <code>backend</code> service:</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-bash" data-lang="bash">$ skupper service create backend 8080</code></pre>
</div>
</div>
</li>
<li>
<p>Check your service network is working as expected by navigating to your cluster URL, port 8080, and clicking <strong>Say hello</strong>.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>For more information, see <a href="cli-podman:skupper_expose.in">podman skupper expose</a>.</p>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2024-01-08 13:01:35 UTC
</div>
</div>
</body>
</html>